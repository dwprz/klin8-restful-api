// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  userId       Int       @id @default(autoincrement())
  email        String    @unique @db.VarChar(100)
  fullName     String    @db.VarChar(100)
  password     String?   @db.VarChar(100)
  role         UserRole  @default(USER)
  photoProfile String?   @db.VarChar(300)
  whatsapp     String?   @db.VarChar(20)
  address      String?   @db.VarChar(500)
  refreshToken String?   @unique @db.VarChar(1000)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt

  orders Order[]

  @@map("users")
}

enum UserRole {
  USER
  ADMIN
}

model Otp {
  email String @id @unique @db.VarChar(100)
  otp   String @db.VarChar(6)

  @@map("otp")
}

model Order {
  orderId       Int           @id @default(autoincrement())
  customerName  String        @db.VarChar(100)
  userId        Int?
  itemName      String        @db.VarChar(100)
  serviceName   ServiceName
  quantity      Int           @db.Integer
  totalPrice    Int           @db.Integer
  statuses      Status[]
  serviceMode   ServiceMode
  paymentMethod PaymentMethod
  whatsapp      String?       @db.VarChar(20)
  address       String?       @db.VarChar(500)
  isDeleted     Boolean       @default(false)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime?     @updatedAt

  user User? @relation(fields: [userId], references: [userId])

  @@map("orders")
}

model Status {
  statusId        Int       @id @default(autoincrement())
  statusName      Statuses
  description     String    @db.VarChar(100)
  icon            String    @db.VarChar(100)
  isCurrentStatus Boolean   @default(false) @db.Boolean
  date            DateTime?
  orderId         Int

  order Order @relation(fields: [orderId], references: [orderId])

  @@map("statuses")
}

enum ServiceName {
  CLEAN
  REPAINT
  REPAIR
}

enum Statuses {
  PENDING_PICK_UP
  IN_PROGRESS
  BEING_DELIVERED
  READY_FOR_COLLECTION
  COMPLETED
  CANCELED
}

enum ServiceMode {
  REGULAR
  PICK_UP_ONLY
  DELIVERY_ONLY
  PICK_UP_AND_DELIVERY
}

enum PaymentMethod {
  CASH
  BANK_TRANSFER
  E_WALLET
}
